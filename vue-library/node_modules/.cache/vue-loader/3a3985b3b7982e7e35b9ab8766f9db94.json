{"remainingRequest":"C:\\Users\\Dmitrii\\WebstormProjects\\vue-library\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dmitrii\\WebstormProjects\\vue-library\\src\\components\\LibraryEntityPage.vue?vue&type=style&index=0&id=7027d5ad&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\Dmitrii\\WebstormProjects\\vue-library\\src\\components\\LibraryEntityPage.vue","mtime":1616887148038},{"path":"C:\\Users\\Dmitrii\\WebstormProjects\\vue-library\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dmitrii\\WebstormProjects\\vue-library\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Dmitrii\\WebstormProjects\\vue-library\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Dmitrii\\WebstormProjects\\vue-library\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dmitrii\\WebstormProjects\\vue-library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Dmitrii\\WebstormProjects\\vue-library\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAnfm1hdGVyaWFsaXplLWNzcy9kaXN0L2Nzcy9tYXRlcmlhbGl6ZS5taW4uY3NzJzsNCg0KI2pvdXJuYWwgew0KICBmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmOw0KICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsNCiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBjb2xvcjogIzJjM2U1MDsNCn0NCg0KI2FkZEJ1dHRvbiB7DQogIG1hcmdpbi10b3A6IDI1cHg7DQogIG1hcmdpbi1sZWZ0OiAtMTJweDsNCiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsNCn0NCg0KI2RlbGV0ZUJ1dHRvbiB7DQogIG1hcmdpbi10b3A6IDI1cHg7DQogIG1hcmdpbi1sZWZ0OiAtMTJweDsNCiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsNCn0NCg0KI3VwZGF0ZUJ1dHRvbiB7DQogIG1hcmdpbi10b3A6IDIlOw0KICBtYXJnaW4tbGVmdDogNCU7DQp9DQoNCiNzYXZlVXBkYXRlQnV0dG9uIHsNCiAgbWFyZ2luLXRvcDogMiU7DQogIG1hcmdpbi1sZWZ0OiA0JTsNCn0NCg0K"},{"version":3,"sources":["LibraryEntityPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuNA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"LibraryEntityPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div id=\"journal\">\r\n    <LibraryNavbar/>\r\n\r\n    <div class=\"row\" style=\"margin-left: 9%; margin-top: 5%; margin-right: 1%\">\r\n      <div class=\"col s3\">\r\n        <form>\r\n          <LibraryInputTextField v-for=\"field in tableFields\" :key=\"field.nameToShow\" @input=\"onInput\"\r\n                                 v-bind:nameToShow=\"field.nameToShow\"\r\n                                 v-bind:nameInBackend=\"field.nameInBackend\"\r\n                                 v-bind:type=\"field.type\"\r\n                                 v-bind:possibleValuesList=\"field.possibleValuesList\"\r\n                                 v-bind:urlToFindMappedValue=\"field.urlToFindMappedValue\"\r\n          />\r\n          <div class=\"col s3\">\r\n            <button id=\"addButton\" class=\"btn-large left\" @click.prevent=\"add\">Add</button>\r\n            <button id=\"deleteButton\" class=\"btn-large left\" @click.prevent=\"deleteAllSelectedItems\">Delete selected</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div class=\"col s9\">\r\n        <div class=\"row\">\r\n          <LibrarySearchBlock style=\"margin-left: 12px\" @search=\"onSearch\"/>\r\n          <button id=\"updateButton\" class=\"btn left\" v-on:click=\"update\">Update selected</button>\r\n          <button id=\"saveUpdateButton\" class=\"btn left\" v-on:click=\"saveUpdate\" style=\"display: none\">Save update</button>\r\n        </div>\r\n        <LibraryEntityTable v-bind:table-fields=\"tableFields\" @input=\"onInput\" @inputForUpdate=\"onInputForUpdate\"\r\n                            v-bind:table-data=\"filteredOnSearch\">\r\n        </LibraryEntityTable>\r\n      </div>\r\n    </div>\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LibraryNavbar from \"../components/LibraryNavbar\";\r\nimport LibraryInputTextField from \"../components/LibraryInputTextField\";\r\nimport LibraryEntityTable from \"../components/LibraryEntityTable\";\r\nimport LibrarySearchBlock from \"./LibrarySearchBlock\";\r\n\r\nexport default {\r\n  name: 'LibraryEntityPage',\r\n  props: [\r\n    'tableFields',\r\n    'tableData',\r\n    'entityName'\r\n  ],\r\n  components: {\r\n    LibraryNavbar,\r\n    LibraryInputTextField,\r\n    LibraryEntityTable,\r\n    LibrarySearchBlock,\r\n  },\r\n  computed: {\r\n    filteredOnSearch() {\r\n      return this.tableData.filter(data => JSON.stringify(data).includes(this.valueToSearch))\r\n    }\r\n  },\r\n  methods: {\r\n    onSearch (data) {\r\n      this.valueToSearch = data.valueToSearch\r\n    },\r\n    onInput (data) {\r\n      this.inputValuesWithFieldNames.push(data)\r\n    },\r\n    onInputForUpdate (data) {\r\n      this.inputValuesWithFieldNamesForUpdate = data\r\n    },\r\n    async add () {\r\n      let stringForJson = '{'\r\n      for (let i = 0; i < this.inputValuesWithFieldNames.length; i++) {\r\n        stringForJson += ('\"' + this.inputValuesWithFieldNames[i].nameInBackend\r\n                      + '\":\"' + this.inputValuesWithFieldNames[i].value + '\",')\r\n      }\r\n      stringForJson = stringForJson.substring(0, stringForJson.length - 1) + '}'\r\n      const addResponse = await fetch('http://localhost:8081/lib/add' + this.entityName, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: stringForJson\r\n      });\r\n      if (addResponse.ok) {\r\n        console.log(\"add succesfull\")\r\n        this.tableData.push(await addResponse.json())\r\n      } else {\r\n        console.log(\"add fail\")\r\n        alert(\"add fail\")\r\n      }\r\n    },\r\n    update () {\r\n      this.$emit('reloadAvailableBookNames')\r\n      let trs = document.querySelector('#tbody').getElementsByTagName('tr')\r\n      for (let i = 0; i < trs.length; i++) {\r\n        let tds = trs[i].getElementsByTagName('td')\r\n        if (tds[tds.length - 1].getElementsByTagName('input')[0].checked) {\r\n          this.trsToUpdate.push(trs[i])\r\n          for (let j = 1; j < tds.length - 1; j++) {\r\n            let possibleInputValues = tds[j].getElementsByTagName('div')\r\n            tds[j].style.boxShadow='0 0 6px 4px #eeff41'\r\n            if (possibleInputValues.length === 0) {\r\n              tds[j].setAttribute('contenteditable', 'true')\r\n            } else {\r\n              possibleInputValues[0].style.display='inline'\r\n            }\r\n          }\r\n        }\r\n      }\r\n      document.querySelector('#updateButton').style.display='none'\r\n      document.querySelector('#saveUpdateButton').style.display='inline'\r\n    },\r\n    async saveUpdate () {\r\n      for (let i = 0; i < this.trsToUpdate.length; i++) {\r\n        let tds = this.trsToUpdate[i].getElementsByTagName('td')\r\n        let stringForJson = '{'\r\n        let tdsWithPossibleValuesCounter = 0\r\n        for (let j = 1; j < tds.length - 1; j++) {\r\n          if (tds[j].getElementsByTagName('div').length === 0) {\r\n            stringForJson += ('\"' + this.tableFields[j].nameInBackend\r\n                + '\":\"' + tds[j].textContent + '\",')\r\n          } else {\r\n            if (this.inputValuesWithFieldNamesForUpdate[tdsWithPossibleValuesCounter] !== undefined) {\r\n              stringForJson += ('\"' + this.inputValuesWithFieldNamesForUpdate[tdsWithPossibleValuesCounter].nameInBackend\r\n                  + '\":\"' + this.inputValuesWithFieldNamesForUpdate[tdsWithPossibleValuesCounter].value + '\",')\r\n              tdsWithPossibleValuesCounter = tdsWithPossibleValuesCounter + 1\r\n            }\r\n          }\r\n        }\r\n        stringForJson = stringForJson.substring(0, stringForJson.length - 1) + '}'\r\n        const updateResponse = await fetch('http://localhost:8081/lib/'\r\n            + this.entityNameWithFirstLetterInLowerCase + '/' + tds[0].textContent, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: stringForJson\r\n        });\r\n        if (updateResponse.ok) {\r\n          console.log(\"update succesfull\")\r\n          tds.forEach(td => {\r\n            td.style.boxShadow='none';\r\n            let possibleInputValues = td.getElementsByTagName('div')\r\n            if (possibleInputValues.length === 0) {\r\n              td.setAttribute('contenteditable', 'false');\r\n            } else {\r\n              possibleInputValues[0].style.display='none'\r\n            }\r\n          })\r\n          tds[tds.length - 1].getElementsByTagName('input')[0].checked = false\r\n        } else {\r\n          tds.forEach(td => {\r\n            let possibleInputValues = td.getElementsByTagName('div')\r\n            if (possibleInputValues.length === 0) {\r\n              td.setAttribute('contenteditable', 'false');\r\n            } else {\r\n              possibleInputValues[0].style.display='none'\r\n            }\r\n          })\r\n          console.log(\"update fail\")\r\n          alert(\"update fail\")\r\n        }\r\n      }\r\n      this.$emit('reloadAvailableBookNames')\r\n      document.querySelector('#updateButton').style.display='inline'\r\n      document.querySelector('#saveUpdateButton').style.display='none'\r\n    },\r\n    async deleteAllSelectedItems() {\r\n      let entityIdsToDelete = []\r\n      let trs = document.querySelector('#tbody').getElementsByTagName('tr')\r\n      for (let i = 0; i < trs.length; i++) {\r\n        let tds = trs[i].getElementsByTagName('td')\r\n        let checkBoxes = tds[tds.length - 1].getElementsByTagName('input')\r\n        for (let j = 0; j < checkBoxes.length; j++) {\r\n          if (checkBoxes[j].checked) {\r\n            entityIdsToDelete.push(tds[0].textContent)\r\n            checkBoxes[j].checked = false\r\n          }\r\n        }\r\n      }\r\n      for (let entityIdToDelete of entityIdsToDelete) {\r\n        const deleteResponse = await fetch('http://localhost:8081/lib/'\r\n            + this.entityNameWithFirstLetterInLowerCase + '/' + entityIdToDelete, {\r\n          method: 'DELETE'\r\n        });\r\n        if (deleteResponse.ok) {\r\n          console.log(\"delete succesfull\")\r\n          for (let item of this.tableData) {\r\n            if (item.id == entityIdToDelete) {\r\n              this.tableData.splice(this.tableData.indexOf(item), 1)\r\n              break\r\n            }\r\n          }\r\n        } else {\r\n          console.log(\"delete fail\")\r\n          alert(\"delete fail\")\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      entityNameWithFirstLetterInLowerCase: (this.entityName[0].toLowerCase() + this.entityName.substring(1, this.entityName.length)),\r\n      valueToSearch: '',\r\n      inputValuesWithFieldNames: [],\r\n      inputValuesWithFieldNamesForUpdate: [],\r\n      trsToUpdate: []\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '~materialize-css/dist/css/materialize.min.css';\r\n\r\n#journal {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n}\r\n\r\n#addButton {\r\n  margin-top: 25px;\r\n  margin-left: -12px;\r\n  white-space: nowrap;\r\n}\r\n\r\n#deleteButton {\r\n  margin-top: 25px;\r\n  margin-left: -12px;\r\n  white-space: nowrap;\r\n}\r\n\r\n#updateButton {\r\n  margin-top: 2%;\r\n  margin-left: 4%;\r\n}\r\n\r\n#saveUpdateButton {\r\n  margin-top: 2%;\r\n  margin-left: 4%;\r\n}\r\n\r\n</style>\r\n\r\n\r\n"]}]}